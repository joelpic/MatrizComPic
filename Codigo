#define shcp re0_bit
#define ds re1_bit
#define stcp re2_bit

#define b1 button(&portb,4,1,1)
#define b2 button(&portb,5,1,1)
#define b3 button(&portb,6,1,1)
#define b4 button(&portb,7,1,1)

#define texto  62 //140max
#define espaco 60 //max 105

int correr; // contador do longo do texto
int velocidade; //velocidade da rolagem
int multiplexacao;// contador de multiplexacao de coluna

int const filas[texto+espaco]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
64, 64, 127, 64, 64, 0, 127, 73, 65, 0, 121, 73, 79, 0, 64, 64, 127, 64, 64, 0, 127, 73, 65, 0, 0, 0, 0, 127, 32, 16, 32, 127, 0, 127, 72, 72, 127, 0,
64, 64, 127, 64, 64, 0, 127, 72, 76, 59, 0, 127, 0, 121, 73, 79
};

unsigned char  coluna []={1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40};

 void main()

 {

 ansel=0;
  anselh=0;

  C1ON_bit = 0;                      // Disable comparators
  C2ON_bit = 0;

  trise=0x00;
  porte=0x00;

  trisa=0x00;
  porta=0b00000000;

  trisb=0b11110001;
  portb=0b00000000;

  trisc=0x00;
  portc=0b00000000;

  trisd=0x00;
  portd=0x00;

while(1)
{
 for(correr=0;correr<texto+20;correr++)
   {
        for(velocidade=0;velocidade<3;velocidade++)
        {
          for(multiplexacao=0;multiplexacao<40;multiplexacao++)
          {
           switch(coluna[multiplexacao])
           {
            case 1:ds=1;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 2:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 3:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 4:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 5:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 6:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 7:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 8:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 9:ds=0;shcp=0; shcp=1;stcp=1;   stcp=0; break;
            case 10:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 11:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 12:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 13:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 14:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 15:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 16:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 17:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 18:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 19:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 20:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 21:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 22:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 23:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 24:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 25:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 26:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 27:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 28:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 29:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 31:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 32:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 33:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 34:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 35:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 36:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 37:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 38:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 39:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            case 40:ds=0;shcp=0; shcp=1;stcp=1;  stcp=0; break;
            }
             portc=(filas[correr+multiplexacao]);
               delay_ms(1);
        }
   }
  }
 }
}
